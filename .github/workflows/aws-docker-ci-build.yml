# This is a basic workflow to help you get started with Actions

name: CI-build-and-push-image

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    tags: 
      - 'v*.*.*'
    paths-ignore:
      - README.md
      - .vscode/**
      - .gitignore
  pull_request:
    branches: [ main ]
    paths-ignore:
      - README.md
      - .vscode/**
      - .gitignore

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
 docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./CarvedRock.Pipeline.Api/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/carvedrockpipelineapi:latest, ${{ secrets.DOCKERHUB_USERNAME }}/carvedrockpipelineapi:1.19.0, ${{ secrets.DOCKERHUB_USERNAME }}/carvedrockpipelineapi:${{ github.run_number }}

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          #Update to your ECR registry
          #private
          #ECR_REGISTRY: 316416775463.dkr.ecr.us-east-1.amazonaws.com
          #public
          ECR_REGISTRY: public.ecr.aws/a3y0c5y9
          ECR_REPOSITORY: carved-rock
          IMAGE_TAG: carved-rock${{ github.run_number }}
        run: |
          # Build a docker container and push it to ECR
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f ./CarvedRock.Pipeline.Api/Dockerfile .
          echo "Pushing image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG          
